name: 'New deployment tool'
description: 'Deploy your project with ease'

inputs:
  github_token:
    description: 'GITHUB_TOKEN or a repo scoped PAT.'
    default: ${{ github.token }}
  version:
    description: 'Version of the CLI to use.'
    default: 'alpha' # using branch name for now for easier deployments 
  deploy_commands:
    description: 'List of commands to run to deploy your project.'
    required: true
    default: ''
  analyze_commits_config:
    description: 'Configure the behavior when analyzing commits.'
    default: ''
  simulated_merge_type:
    description: 'When running in a pull request, what type of merge to simulate to run the tool in test mode. Note: This input option is planned to go away in favor of reading github repo settings. Options: merge, squash, rebase.'
    default: 'merge' # options: merge, squash, rebase

outputs:
  new_release_version:
    description: 'If a new release was created, this is the version of that release.'
    value: ${{ steps.deployment.outputs.new_release_version }}
  test_mode_on:
    description: 'If test mode was on when the tool ran. Value is string values "true" or "false".'
    value: ${{ steps.deployment.outputs.test_mode_on }}

runs:
  using: "composite"
  steps:
    - name: Install Deno runtime to run the CLI
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x
    
    - name: Fetch all branches so we can reference base branch to merge into 
      run: git fetch
      shell: bash 

    - name: Run deployment tool 
      # Deno's runtime permissions are a great feature. It would be nice to take advantage of it, however, it may not be possible with future features like running plugins. 
      #
      # The directories we are giving permission to read and write to are the temp directories for all of the OSes that GitHub Actions supports. /tmp for linux and /var/folders for macOS.
      run: deno run --allow-env=GITHUB_EVENT_PATH,GITHUB_REF,GITHUB_EVENT_NAME,GITHUB_REPOSITORY,INPUT_GITHUB_TOKEN,INPUT_DEPLOY_COMMANDS,INPUT_ANALYZE_COMMITS_CONFIG --allow-net="api.github.com" --allow-run --allow-read="/tmp,/var/folders,/home/runner/work/_temp/_github_workflow" --allow-write="/tmp,/var/folders" https://raw.githubusercontent.com/levibostian/new-deployment-tool/${{ inputs.version }}/index.ts
      id: deployment
      shell: bash 
      env:
        INPUT_GITHUB_TOKEN: ${{ inputs.github_token }}
        INPUT_DEPLOY_COMMANDS: ${{ inputs.deploy_commands }}
        INPUT_ANALYZE_COMMITS_CONFIG: ${{ inputs.analyze_commits_config }}
